import os
import sys
from typing import List

__file__ = os.path.basename(sys.argv[0])
BASENAME = "mse_char_map"
OUTPUT_FILE_H = f"{BASENAME}.h"
OUTPUT_FILE_U = f"{BASENAME}.c"
FILE_NOTICE = f"""// THIS FILE IS AUTO GENERATED BY {__file__}
// DO NOT MODIFY BY HAND"""
CHAR_MAP_DEF = "char mse_filter_char_map[0xFF]"


def gen_header() -> None:
    output_h = f"""#pragma once
{FILE_NOTICE}

/// This file map will turn chars into the filtered output, returning 0 when they are to be ignored
extern {CHAR_MAP_DEF};"""
    with open(OUTPUT_FILE_H, "w") as f:
        f.write(output_h)


def __get_entry_val(i: int) -> int:
    s: str = chr(i).lower()
    # Filter out vowels
    if s in ["a", "e", "i", "o", "u"]:
        return 0

    # Spanish people!
    if s in ["ñ"]:
        return ord("n")

    # Germans
    if s in ["ß"]:
        return ord("s")

    # Idk where these letters come from
    if s in ["ý", "ÿ"]:
        return ord("y")

    # French people
    if s in ["ç"]:
        return ord("c")

    # The americans like to use Z instead of S
    if s == "z":
        return ord("s")

    # Letters and, numbers are good
    if s.isalpha() and i <= ord("z"):
        return ord(s)
    # This letter can probably be ignored
    return 0


def get_entry(i: int) -> str:
    val: int = __get_entry_val(i)
    return f"    /* {i} - {chr(i)} */ {val}"


def gen_unit() -> None:
    output_unit = f"""
#include "{OUTPUT_FILE_H}"

{FILE_NOTICE}

{CHAR_MAP_DEF} =
"""
    entries: List[str] = []
    for i in range(0, 0xFF):
        entries.append(get_entry(i))

    output_unit += "{\n" + ",\n".join(entries) + "\n};"

    with open(OUTPUT_FILE_U, "w") as f:
        f.write(output_unit)


def main() -> None:
    gen_header()
    gen_unit()


if __name__ == "__main__":
    main()
